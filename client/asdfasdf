
pipeline {
    agent any

    environment {
        DOCKER_REGISTRY = 'your_docker_registry_url'

        BACKEND_IMAGE_NAME = 'next-ecommerce-back'
        FRONTEND_IMAGE_NAME = 'next-ecommerce-client'

        BACKEND_CONTAINER_NAME = 'backend-container'
        FRONTEND_CONTAINER_NAME = 'client-container'
    }

    stages {
          stage('Checkout') {
              steps {
                  echo 'Fetching code from GitHub...'
                  git url: 'https://github.com/hamye4143/next-ecommerce.git', branch: 'master', credentialsId: 'credentials'
              }
          }

        stage('Build Frontend') {
            steps {
                echo 'Building Frontend Image...'
                dir('frontend') {
                    sh '''
                    docker ps -aqf "name=${FRONTEND_CONTAINER_NAME}" && docker stop ${FRONTEND_CONTAINER_NAME} && docker rm ${FRONTEND_CONTAINER_NAME} || true
                    docker images -q ${FRONTEND_IMAGE_NAME} && docker rmi ${FRONTEND_IMAGE_NAME} || true
                    docker build -t ${FRONTEND_IMAGE_NAME} ./client
                    '''
                }
            }
        }

        stage('Deploy Frontend') {
            steps {
                echo 'Deploying Frontend Container...'
                sh '''
                docker run -d -p 3000:3000 --name ${FRONTEND_CONTAINER_NAME} ${FRONTEND_IMAGE_NAME}
                '''
            }
        }

        stage('Build Backend') {
            steps {
                echo 'Building Backend Image...'
                dir('backend') {
                    sh '''
                    chmod +x ./gradlew
                    ./gradlew clean build

                    docker ps -aqf "name=${BACKEND_CONTAINER_NAME}" && docker stop ${BACKEND_CONTAINER_NAME} && docker rm ${BACKEND_CONTAINER_NAME} || true
                    docker images -q ${BACKEND_IMAGE_NAME} && docker rmi ${BACKEND_IMAGE_NAME} || true
                    docker build -t ${BACKEND_IMAGE_NAME} .
                    '''
                }
            }
        }

        stage('Deploy Backend') {
            steps {
                echo 'Deploying Backend Container...'
                sh '''
                docker run -d -p 8080:8080 --name ${BACKEND_CONTAINER_NAME} ${BACKEND_IMAGE_NAME}
                '''
            }
        }
    }

    post {
        success {
            echo 'Pipeline completed successfully!'
        }
        failure {
            echo 'Pipeline failed!'
        }
    }
}