name: Deploy CI/CD

on:
  push:
    branches: [ "master" ]  # master에 push할 때 실행됨

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      FRONT_IMAGE: hamye4143/next-ecommerce-frontend
      BACK_IMAGE: hamye4143/next-ecommerce-backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Build frontend
        working-directory: client
        run: |
          npm ci
          npm run build
          docker build -t $FRONT_IMAGE -f Dockerfile .

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: 17

      - name: Build backend
        working-directory: back
        run: |
          ./gradlew clean bootJar -x test
          cp build/libs/app.jar app.jar
          docker build -t $BACK_IMAGE -f Dockerfile .

      - name: Docker Hub 로그인
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker images
        run: |
          docker push $FRONT_IMAGE
          docker push $BACK_IMAGE

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          envs: FRONT_IMAGE,BACK_IMAGE
          script: |
            # 최신 코드 받아오기 (docker-compose.yml 반영)
            cd ~/next-ecommerce
            git pull origin master  # master 브랜치 기준 최신 코드 반영
  
            # ✅ DB까지 완전 초기화
            docker-compose -f docker-compose.yml down -v
            
            docker system prune -f
            
            #  최신 이미지 받기
            docker pull $FRONT_IMAGE
            docker pull $BACK_IMAGE
            
            # 새 컨테이너 실행
            FRONT_IMAGE=$FRONT_IMAGE BACK_IMAGE=$BACK_IMAGE docker-compose -f ~/next-ecommerce/docker-compose.yml up -d
